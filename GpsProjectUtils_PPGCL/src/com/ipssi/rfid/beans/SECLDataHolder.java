package com.ipssi.rfid.beans;

import com.ipssi.gen.utils.Misc;
import com.ipssi.rfid.db.Table;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.ipssi.rfid.db.RFIDMasterDao;
import com.ipssi.rfid.db.Table.Column;
import com.ipssi.rfid.processor.Utils;
import com.mysql.jdbc.PreparedStatement;

import java.sql.Connection;

import org.omg.IOP.Encoding;

@Table("secl_rfid_log")
public class SECLDataHolder {
	public static int MAT_TYPE_COAL=1;
	public static int ACCESS_TYPE_CONTROLLED=1;
	public static int CARD_TYPE_PERMANENT=1;
	public static String SYSTEM_CODE="SYS1";
	public static int READER_ONE_TYPE=0;
	public static int READER_TWO_TYPE=1;
	public static int SYSTEM_REGION_LOAD = 0;
	public static int SYSTEM_LOAD_AREA_CODE=1;
	public static int SYSTEM_UNLOAD_AREA_CODE=0;
	public static int SYSTEM_REGION_TYPE=0;
	public static int READER_ONE_SEQ_NO=1;
	public static int READER_TWO_SEQ_NO=1;
	public static int SYSTEM_ISSUE_CARD=0;
	
	@Column("id")
	private int id=Misc.getUndefInt();//auto incremented id
	
	@Column("token_id")
	private int tokenId=Misc.getUndefInt();//generated by system process
	
	@Column("vehicle_name")
	private String vehicleName;
	
	@Column("vehicle_id")
	private int vehicleId=0;
	@Column("rfid_id")
	private int rfidId=0;
	
	@Column("epc_id")
	private String epcId;
	
	@Column("mat_type")
	private int matType=MAT_TYPE_COAL;
	
	@Column("access_type")
	private int accessType=ACCESS_TYPE_CONTROLLED;
	
	@Column("card_type")
	private int cardType=CARD_TYPE_PERMANENT;
	
	@Column("load_status")
	private int loadStatus=0;
	
	@Column("state")
	private int state=0;
	
	@Column("system_code")
	private String systemCode="";
	
	@Column("load_gate_system_code")
	private String loadGateSystemCode="";
	
	@Column("unload_gate_system_code")
	private String unloadGateSystemCode="";
	
	@Column("load_WB_system_code")
	private String loadWBSystemCode="";
	
	@Column("unload_WB_system_code")
	private String unloadWBSystemCode="";
	
	@Column("load_tWt")
	private int load_tWt=0;
	
	@Column("load_gWt")
	private int load_gWt=0;
	
	@Column("unload_tWt")
	private int unload_tWt=0;
	
	@Column("unload_gWt")
	private int unload_gWt=0;
	
	@Column("load_tWt_manual")
	private int load_tWt_manual = 0;
	
	@Column("load_gWt_manual")
	private int load_gWt_manual = 0;
	
	@Column("unload_tWt_manual")
	private int unload_tWt_manual = 0;
	
	@Column("unload_gWt_manual")
	private int unload_gWt_manual = 0;
	
	@Column("load_tare_weightCentered")
	private int load_tare_weightCentered = 1;
	
	@Column("load_gross_weightCentered")
	private int load_gross_weightCentered = 1;
	
	@Column("unload_tare_weightCentered")
	private int unload_tare_weightCentered = 1;
	
	@Column("unload_gross_weightCentered")
	private int unload_gross_weightCentered = 1;
	
	@Column("system_type")
	private int systemType=0;
	
	@Column("area_code")
	private int areaCode=0;
	
	@Column("gate_seq1")
	private int gate_seq1=0;
	
	@Column("gate_seq2")
	private int gate_seq2=0;
	
	@Column("gate_seq3")
	private int gate_seq3=0;
	
	@Column("gate_seq4")
	private int gate_seq4=0;
	
	@Column("gate_seq5")
	private int gate_seq5=0;
	
	@Column("gate_seq6")
	private int gate_seq6=0;
	
	@Column("gate_seq7")
	private int gate_seq7=0;
	
	@Column("gate_seq8")
	private int gate_seq8=0;
	
	@Column("card_number")
	private String cardNumber = "";
	
	@Column("load_gate_in")
	private Date loadGateIn ;
	
	@Column("load_gate_out")
	private Date loadGateOut ;
	
	@Column("unload_gate_in")
	private Date unloadGateIn ;
	
	@Column("unload_gate_out")
	private Date unloadGateOut ;
	
	@Column("load_wb_date")
	private Date loadWBDate ;
	
	@Column("unload_wb_date")
	private Date unloadWBDate ;
	
	@Column("updated_on")
	private Date updatedOn ;
	
	@Column("is_weight_taken")
	private Boolean isWeightTaken ;
	
	@Column("is_initialized")
	private Boolean isInitialized ;
	
	@Column("blacklist")
	private int blacklist = 0;
	
	@Column("mines_name")
	private String minesName="";
	
	@Column("is_manual_entry")
	private Boolean isManualEntry ;
	
	@Column("po_number")
	private String poNumber = "";//10 digit max
	
	@Column("challan_number")
	private String challanNumber = "";//10 digit max
	
	@Column("transporter")
	private String transporter = "";
	
	
	
	 public SECLDataHolder()
     {
     }
     public SECLDataHolder(String vehicleName, RFIDTagInfo tagInfo, int readerId)
     {
         this.vehicleName = vehicleName;
         loadDataHolder(tagInfo, this, readerId);
     }
     
    
     public void loadDataHolder(RFIDTagInfo tagInfo, SECLDataHolder dataHolder, int readerId)
     {
         if (tagInfo == null || dataHolder == null)
             return;
         if (tagInfo != null && tagInfo.userData != null)
         {
             byte[] data = tagInfo.userData;
             byte[] epc = tagInfo.epcId;
             loadDataHolderNew(tagInfo, dataHolder, readerId);
             /*if ( data[0] == '@')
                 loadDataHolderOld(tagInfo, dataHolder, readerId);
             else*/
                 
         }

     }
     public void loadDataHolderNew(RFIDTagInfo tagInfo, SECLDataHolder dataHolder, int readerId)
     {
//       MasterDB masterDB = null;
//       bool destroyIt = false;
       if (tagInfo == null || dataHolder == null)
           return;
       try
       {
           if (tagInfo != null && tagInfo.userData != null)
           {
               byte[] data = tagInfo.userData;
               byte[] epc = tagInfo.epcId;
               Vehicle vehicle = null;
               if (epc != null && epc.length > 0)
               {
                   epcId = Utils.ByteArrayToHexString(epc);
                  // dataHolder.cardNumber = getCardNumberFromEPC(epcId,conn);
               }
               //masterDB = new MasterDB();
               String binaryString = Utils.getBinaryStrFromByteArray(data);
               String del = Utils.Decoding6BinaryToString(binaryString.substring(0, 6));
               if (del.equalsIgnoreCase("@"))
               {
                   dataHolder.isInitialized = true;
                   if (Utils.isNull(vehicleName) || SYSTEM_ISSUE_CARD != 1)
                   dataHolder.vehicleName = Utils.Decoding6BinaryToString(binaryString.substring(6, 60)).replace("@", "").trim();
                   dataHolder.loadGateIn = Utils.getDateTime(Utils.DecodingBinaryToInt(binaryString.substring(66, 40),32));
                   dataHolder.loadGateOut = Utils.getDateTime(Utils.DecodingBinaryToInt(binaryString.substring(106, 40),32));
                   dataHolder.unloadGateIn = Utils.getDateTime(Utils.DecodingBinaryToInt(binaryString.substring(146, 40),32));
                   dataHolder.unloadGateOut = Utils.getDateTime(Utils.DecodingBinaryToInt(binaryString.substring(186, 40),32));
                   dataHolder.loadWBDate = Utils.getDateTime(Utils.DecodingBinaryToInt(binaryString.substring(226, 40),32));
                   dataHolder.unloadWBDate = Utils.getDateTime(Utils.DecodingBinaryToInt(binaryString.substring(266, 40),32));
                   String digital_status = binaryString.substring(306, 6);
                   String digital_seq = binaryString.substring(312, 6);
                   dataHolder.matType = Utils.DecodingBinaryToInt(digital_status.charAt(0) + "",16);
                   dataHolder.accessType = Utils.DecodingBinaryToInt(digital_status.charAt(1) + "",16);
                   dataHolder.cardType = Utils.DecodingBinaryToInt(digital_status.charAt(2) + "",16);
                   dataHolder.state = Misc.getParamAsInt(Utils.Decoding4BinaryToString(digital_status.substring(3, 3)));
                   dataHolder.gate_seq1 = Utils.DecodingBinaryToInt(digital_seq.charAt(5)+"",16);
                   dataHolder.gate_seq2 = Utils.DecodingBinaryToInt(digital_seq.charAt(4) + "",16);
                   dataHolder.gate_seq3 = Utils.DecodingBinaryToInt(digital_seq.charAt(3) + "",16);
                   dataHolder.gate_seq4 = Utils.DecodingBinaryToInt(digital_seq.charAt(2) + "",16);
                   dataHolder.gate_seq5 = Utils.DecodingBinaryToInt(digital_seq.charAt(1) + "",16);
                   dataHolder.gate_seq6 = Utils.DecodingBinaryToInt(digital_seq.charAt(0) + "",16);
                   dataHolder.systemCode = Utils.Decoding6BinaryToString(binaryString.substring(318, 24)).replace("\0", "").replace(" ", "").replace("@", "").trim();
                   dataHolder.load_tWt = Misc.getParamAsInt(Utils.Decoding4BinaryToString(binaryString.substring(342, 16))) * 10;
                   dataHolder.load_gWt = Misc.getParamAsInt(Utils.Decoding4BinaryToString(binaryString.substring(358, 16))) * 10;
                   dataHolder.unload_tWt = Misc.getParamAsInt(Utils.Decoding4BinaryToString(binaryString.substring(374, 16))) * 10;
                   dataHolder.unload_gWt = Misc.getParamAsInt(Utils.Decoding4BinaryToString(binaryString.substring(390, 16))) * 10;
                   dataHolder.load_tare_weightCentered = Misc.getParamAsInt(binaryString.substring(406, 1));
                   dataHolder.load_gross_weightCentered = Misc.getParamAsInt(binaryString.substring(407, 1));
                   dataHolder.unload_tare_weightCentered = Misc.getParamAsInt(binaryString.substring(408, 1));
                   dataHolder.unload_gross_weightCentered = Misc.getParamAsInt(binaryString.substring(409, 1));
                   dataHolder.areaCode = Misc.getParamAsInt(Utils.Decoding4BinaryToString(binaryString.substring(410, 4)));
                   dataHolder.systemType = Misc.getParamAsInt(Utils.Decoding4BinaryToString("00" + binaryString.substring(414, 2)));
                   dataHolder.poNumber = Utils.Decoding4BinaryToString(binaryString.substring(416, 40)).replace("\0", "").replace(" ", "").replace("@", "").trim();
                   dataHolder.challanNumber = Utils.Decoding4BinaryToString(binaryString.substring(456, 40)).replace("\0", "").replace(" ", "").replace("@", "").trim();
                   dataHolder.transporter = Utils.Decoding4BinaryToString(binaryString.substring(496, 8)).replace("\0", "").replace(" ", "").replace("@", "").trim();
                   dataHolder.minesName = Utils.Decoding4BinaryToString(binaryString.substring(504, 8)).replace("\0", "").replace(" ", "").replace("@", "").trim();
               
               }
           }
       
   
		 }
       catch (Exception e) {
    	  e.printStackTrace();
	}
}

                 public static String getCardNumberFromEPC(String EPC,Connection conn) throws Exception
                 {
                     String retval = null;
                     String search = "select rm.id from rfid_master rm where rm.tag_epc like '" + EPC + "'";
                     PreparedStatement ps = null;
                     ResultSet rs = null;
                     try
                     {
                         
                         
                         if (conn != null)
                         {
                        	 conn.prepareStatement(search);
                        	
                             rs = ps.executeQuery();
                             while (rs.next())
                             {
                                 retval = rs.getString( "id");
                             }
                         }
                     }
                     catch (Exception ex)
                     {
                        // Logger.WriteException("MySqlDBMaster.getCardNumberFromEPC", ex);
                         throw ex;
                     }
                     finally
                     {
                    		try {
                     
                         if (ps != null)
						
								ps.close();
							  if(rs!=null)
                        	 rs.close();
                        	 
                    		} catch (SQLException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
                       
                     }
                     return retval;
                 }
                
     public void clear(int readerId)
     {
         this.systemCode = SYSTEM_CODE;
         this.load_tWt = 0;
         this.load_gWt = 0;
         this.unload_tWt = 0;
         this.unload_gWt = 0;
         this.load_tare_weightCentered = 0;
         this.load_gross_weightCentered = 0;
         this.unload_tare_weightCentered = 0;
         this.unload_gross_weightCentered = 0;
         this.systemType = getReaderType(readerId);
         this.areaCode = getAreaCode();
         //this.updatedOn = DateTime.Now;
         this.loadGateSystemCode = null;
         this.unloadGateSystemCode = null;
         this.loadWBSystemCode = null;
         this.unloadWBSystemCode = null;
//         this.loadWBDate = DateTime.MinValue;
//         this.unloadWBDate = DateTime.MinValue;
//         this.loadGateIn = DateTime.MinValue;
//         this.loadGateOut = DateTime.MinValue;
//         this.unloadGateIn = DateTime.MinValue;
//         this.unloadGateOut = DateTime.MinValue;
//         if (SYSTEM_LOAD_AREA_CODE == areaCode + "")
//         {
//             if (this.systemType == Misc.SYSTEM_READER_GATE_ENTRY)
//             {
//                 this.loadGateSystemCode = this.systemCode;
//                 this.loadGateIn = this.updatedOn;
//             }
//             else if (this.systemType == Misc.SYSTEM_READER_GATE_EXIT)
//             {
//                 this.loadGateSystemCode = this.systemCode;
//                 this.loadGateOut = this.updatedOn;
//             }
//             else
//             {
//                 this.loadWBSystemCode = this.systemCode;
//                 this.loadWBDate = this.updatedOn;
//             }
//         }
//         else
//         {
//             if (this.systemType == Misc.SYSTEM_READER_GATE_ENTRY)
//             {
//                 this.unloadGateSystemCode = this.systemCode;
//                 this.unloadGateIn = this.updatedOn;
//             }
//             else if (this.systemType == Misc.SYSTEM_READER_GATE_EXIT)
//             {
//                 this.unloadGateSystemCode = this.systemCode;
//                 this.unloadGateOut = this.updatedOn;
//             }
//             else
//             {
//                 this.unloadWBSystemCode = this.systemCode;
//                 this.unloadWBDate = this.updatedOn;
//             }
//         }
     }
    
     public int getSeqValueById(int number)
     {
         switch (number)
         {
             case 1: return gate_seq1;
             case 2: return gate_seq2;
             case 3: return gate_seq3;
             case 4: return gate_seq4;
             case 5: return gate_seq5;
             case 6: return gate_seq6;
             case 7: return gate_seq7;
             case 8: return gate_seq8;
             default: return 0;
         }
     }
     public Boolean Equals(SECLDataHolder dataHolder)
     {
         Boolean retval = false;
         if (dataHolder != null)
         {
             retval = this.systemCode == dataHolder.systemCode
                      && this.load_gWt == dataHolder.load_gWt
                      && this.load_tWt == dataHolder.load_tWt
                      && this.unload_gWt == dataHolder.unload_gWt
                      && this.unload_tWt == dataHolder.unload_tWt;
         }
         return retval;
      }
     
     public String ToString()
     {
    	 SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmm");
     
         return (vehicleName + "," + sdf.format(updatedOn) + "," + systemCode + "," + sdf.format(loadGateIn) + "," + sdf.format(loadGateOut) + "," + sdf.format(unloadGateIn) + "," + sdf.format(unloadGateOut) + "," + load_tWt + "," + load_gWt + "," + unload_tWt + "," + unload_gWt + "," + load_gross_weightCentered + "," + unload_gross_weightCentered + "," + sdf.format(loadWBDate) + "," + sdf.format(unloadWBDate) + "," + poNumber + "," + challanNumber + "," + transporter + "," + minesName + "," + epcId);
     }

     public static int getReaderType(int readerId)
     {
         return (readerId == 0 ? (READER_ONE_TYPE) : (READER_TWO_TYPE));
     }
     
     public static int getAreaCode()
     {
         return (SYSTEM_REGION_TYPE ==SYSTEM_REGION_LOAD ? SYSTEM_LOAD_AREA_CODE : SYSTEM_UNLOAD_AREA_CODE);
     }
     public static int getSeqNoById(int readerId)
     {
         int retval = 0;
         if (readerId == 0)
             retval = (READER_ONE_SEQ_NO);
         else
             retval = (READER_TWO_SEQ_NO);
         return retval;
     }
	public void setTokenId(int tokenId) {
		this.tokenId = tokenId;
	}
	public int getTokenId() {
		return tokenId;
	}
	public void setId(int id) {
		this.id = id;
	}
	public int getId() {
		return id;
	}
	public void setVehicleName(String vehicleName) {
		this.vehicleName = vehicleName;
	}
	public String getVehicleName() {
		return vehicleName;
	}
	public void setVehicleId(int vehicleId) {
		this.vehicleId = vehicleId;
	}
	public int getVehicleId() {
		return vehicleId;
	}
	public void setRfidId(int rfidId) {
		this.rfidId = rfidId;
	}
	public int getRfidId() {
		return rfidId;
	}
	public void setEpcId(String epcId) {
		this.epcId = epcId;
	}
	public String getEpcId() {
		return epcId;
	}
	public void setMatType(int matType) {
		this.matType = matType;
	}
	public int getMatType() {
		return matType;
	}
	public void setAccessType(int accessType) {
		this.accessType = accessType;
	}
	public int getAccessType() {
		return accessType;
	}
	public void setCardType(int cardType) {
		this.cardType = cardType;
	}
	public int getCardType() {
		return cardType;
	}
	public void setLoadStatus(int loadStatus) {
		this.loadStatus = loadStatus;
	}
	public int getLoadStatus() {
		return loadStatus;
	}
	public void setState(int state) {
		this.state = state;
	}
	public int getState() {
		return state;
	}
	public void setSystemCode(String systemCode) {
		this.systemCode = systemCode;
	}
	public String getSystemCode() {
		return systemCode;
	}
	public void setLoadGateSystemCode(String loadGateSystemCode) {
		this.loadGateSystemCode = loadGateSystemCode;
	}
	public String getLoadGateSystemCode() {
		return loadGateSystemCode;
	}
	public void setUnloadGateSystemCode(String unloadGateSystemCode) {
		this.unloadGateSystemCode = unloadGateSystemCode;
	}
	public String getUnloadGateSystemCode() {
		return unloadGateSystemCode;
	}
	public void setLoadWBSystemCode(String loadWBSystemCode) {
		this.loadWBSystemCode = loadWBSystemCode;
	}
	public String getLoadWBSystemCode() {
		return loadWBSystemCode;
	}
	public void setUnloadWBSystemCode(String unloadWBSystemCode) {
		this.unloadWBSystemCode = unloadWBSystemCode;
	}
	public String getUnloadWBSystemCode() {
		return unloadWBSystemCode;
	}
	public void setLoad_tWt(int load_tWt) {
		this.load_tWt = load_tWt;
	}
	public int getLoad_tWt() {
		return load_tWt;
	}
	public void setTransporter(String transporter) {
		this.transporter = transporter;
	}
	public String getTransporter() {
		return transporter;
	}
	public void setChallanNumber(String challanNumber) {
		this.challanNumber = challanNumber;
	}
	public String getChallanNumber() {
		return challanNumber;
	}
	public void setMinesName(String minesName) {
		this.minesName = minesName;
	}
	public String getMinesName() {
		return minesName;
	}
	public void setIsManualEntry(Boolean isManualEntry) {
		this.isManualEntry = isManualEntry;
	}
	public Boolean getIsManualEntry() {
		return isManualEntry;
	}
	public void setPoNumber(String poNumber) {
		this.poNumber = poNumber;
	}
	public String getPoNumber() {
		return poNumber;
	}
	public void setBlacklist(int blacklist) {
		this.blacklist = blacklist;
	}
	public int getBlacklist() {
		return blacklist;
	}
	public void setIsInitialized(Boolean isInitialized) {
		this.isInitialized = isInitialized;
	}
	public Boolean getIsInitialized() {
		return isInitialized;
	}
	public void setUnloadGateIn(Date unloadGateIn) {
		this.unloadGateIn = unloadGateIn;
	}
	public Date getUnloadGateIn() {
		return unloadGateIn;
	}
	public void setUnloadGateOut(Date unloadGateOut) {
		this.unloadGateOut = unloadGateOut;
	}
	public Date getUnloadGateOut() {
		return unloadGateOut;
	}
	public void setUnloadWBDate(Date unloadWBDate) {
		this.unloadWBDate = unloadWBDate;
	}
	public Date getUnloadWBDate() {
		return unloadWBDate;
	}
	public void setLoadWBDate(Date loadWBDate) {
		this.loadWBDate = loadWBDate;
	}
	public Date getLoadWBDate() {
		return loadWBDate;
	}
	public void setIsWeightTaken(Boolean isWeightTaken) {
		this.isWeightTaken = isWeightTaken;
	}
	public Boolean getIsWeightTaken() {
		return isWeightTaken;
	}
	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}
	public Date getUpdatedOn() {
		return updatedOn;
	}
	public void setLoadGateOut(Date loadGateOut) {
		this.loadGateOut = loadGateOut;
	}
	public Date getLoadGateOut() {
		return loadGateOut;
	}
	public void setLoadGateIn(Date loadGateIn) {
		this.loadGateIn = loadGateIn;
	}
	public Date getLoadGateIn() {
		return loadGateIn;
	}
	public void setCardNumber(String cardNumber) {
		this.cardNumber = cardNumber;
	}
	public String getCardNumber() {
		return cardNumber;
	}
	public void setGate_seq8(int gate_seq8) {
		this.gate_seq8 = gate_seq8;
	}
	public int getGate_seq8() {
		return gate_seq8;
	}
	public void setGate_seq7(int gate_seq7) {
		this.gate_seq7 = gate_seq7;
	}
	public int getGate_seq7() {
		return gate_seq7;
	}
	public void setGate_seq6(int gate_seq6) {
		this.gate_seq6 = gate_seq6;
	}
	public int getGate_seq6() {
		return gate_seq6;
	}
	public void setGate_seq5(int gate_seq5) {
		this.gate_seq5 = gate_seq5;
	}
	public int getGate_seq5() {
		return gate_seq5;
	}
	public void setGate_seq4(int gate_seq4) {
		this.gate_seq4 = gate_seq4;
	}
	public int getGate_seq4() {
		return gate_seq4;
	}
	public void setGate_seq3(int gate_seq3) {
		this.gate_seq3 = gate_seq3;
	}
	public int getGate_seq3() {
		return gate_seq3;
	}
	public void setGate_seq2(int gate_seq2) {
		this.gate_seq2 = gate_seq2;
	}
	public int getGate_seq2() {
		return gate_seq2;
	}
	public void setGate_seq1(int gate_seq1) {
		this.gate_seq1 = gate_seq1;
	}
	public int getGate_seq1() {
		return gate_seq1;
	}
	public void setAreaCode(int areaCode) {
		this.areaCode = areaCode;
	}
	
	public void setSystemType(int systemType) {
		this.systemType = systemType;
	}
	public int getSystemType() {
		return systemType;
	}
	public void setUnload_gross_weightCentered(int unload_gross_weightCentered) {
		this.unload_gross_weightCentered = unload_gross_weightCentered;
	}
	public int getUnload_gross_weightCentered() {
		return unload_gross_weightCentered;
	}
	public void setUnload_tare_weightCentered(int unload_tare_weightCentered) {
		this.unload_tare_weightCentered = unload_tare_weightCentered;
	}
	public int getUnload_tare_weightCentered() {
		return unload_tare_weightCentered;
	}
	public void setLoad_gross_weightCentered(int load_gross_weightCentered) {
		this.load_gross_weightCentered = load_gross_weightCentered;
	}
	public int getLoad_gross_weightCentered() {
		return load_gross_weightCentered;
	}
	public void setLoad_tare_weightCentered(int load_tare_weightCentered) {
		this.load_tare_weightCentered = load_tare_weightCentered;
	}
	public int getLoad_tare_weightCentered() {
		return load_tare_weightCentered;
	}
	public void setLoad_gWt(int load_gWt) {
		this.load_gWt = load_gWt;
	}
	public int getLoad_gWt() {
		return load_gWt;
	}
	public void setUnload_tWt(int unload_tWt) {
		this.unload_tWt = unload_tWt;
	}
	public int getUnload_tWt() {
		return unload_tWt;
	}
	public void setUnload_gWt(int unload_gWt) {
		this.unload_gWt = unload_gWt;
	}
	public int getUnload_gWt() {
		return unload_gWt;
	}
	public void setLoad_tWt_manual(int load_tWt_manual) {
		this.load_tWt_manual = load_tWt_manual;
	}
	public int getLoad_tWt_manual() {
		return load_tWt_manual;
	}
	public void setLoad_gWt_manual(int load_gWt_manual) {
		this.load_gWt_manual = load_gWt_manual;
	}
	public int getLoad_gWt_manual() {
		return load_gWt_manual;
	}
	public void setUnload_tWt_manual(int unload_tWt_manual) {
		this.unload_tWt_manual = unload_tWt_manual;
	}
	public int getUnload_tWt_manual() {
		return unload_tWt_manual;
	}
	public void setUnload_gWt_manual(int unload_gWt_manual) {
		this.unload_gWt_manual = unload_gWt_manual;
	}
	public int getUnload_gWt_manual() {
		return unload_gWt_manual;
	}
    

	public void printData(){
		System.out.println("Vehicle NAME: " + getVehicleName());
		System.out.println("Load_gWt : " + getLoad_gWt());
//		System.out.println("Avg Gross:" + getAvgGross());
//		System.out.println("transporterId : " + getTransporterId());
//		System.out.println("deviceId : " + getDeviceId());
//		System.out.println("MinesId: " + getMinesId());
//		System.out.println("challan Id: " + getChallanId());
//		System.out.println("LRID : " + getLRID());
//		System.out.println("load Tare : " + getLoadTare());
//		System.out.println("load Gross : " + getLoadGross());
//		System.out.println("Is Data : " + (isDataOnCard() ? "YES" : "NO"));
//		System.out.println("Data Valid: " + (getValidityFlag() ? "YES" : "NO"));
//		if (getDatetime() != null) {
//			System.out.println("Challan Date : " + get().toLocaleString());
//		}
}
}
