/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package register_relative_information;

import java.awt.Desktop;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Properties;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.MessagingException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Virendra Gupta
 */
public final class MasterPageRegistration extends javax.swing.JFrame {

    private String Fname1;
    private String Lname1;
    private String State1;
    private String Address1;
    private String City1;
    private String Fatname1;
    private String Email1;
    private String Pno1;
    private String Mno1;
    private String Pin1;
    private Date DOB1;
    private String DOB2;
    private Connection connect;
    private String Notes1;
    private DataHolder datahold;
    private HolderClass holdClass;
    private ArrayList<HolderClass> listitems;
    private ArrayList<DataHolder> listitem;
    private ArrayList<HoldingRegistrationData> registration_table_item;
    private String State2;
    private String Host1;
    private String Host2;
    private ConfigUtility configUtil;
    private String User1;
    private String Port1;
    private char[] Pwd1;
    private String To1;
    private String Subject1;
    private String Message1;
    private JFileChooser Chooser;
    private String To3;
    private Date StartDate1;
    private Date EndDate1;
    DefaultTableModel model = null;
    DefaultTableModel model1;
    private ArrayList<HoldingRegistrationData> holdingData;
    private final SimpleDateFormat sdf = new SimpleDateFormat("hh:mm");
    private int currentSecond;
    private Calendar calendar;
    private Connection2 connect1;
    private HoldingRegistrationData hrd;
    private JCheckBox cb;
    private Connection2 connect2;
    private String update_state2;
    private String filename = "";
    private ImageIcon format = null;
    private ImageIcon format1 = null;
    int s = 0;
    byte[] person_image = null;
    byte[] person_image1 = null;
    private String combobox_registration1;
    private DataHolder regist_table_datahold;
    private HoldingRegistrationData hrd1;

    /**
     * Creates new form MasterPageRegistration
     *
     * @throws java.lang.Exception
     */
    public MasterPageRegistration() throws Exception {
        initComponents();
        start();
        Delete.setVisible(false);
        Update_Button.setVisible(false);
        DropDownSet();
        loadSetting();


    }

    private void reset() {
        calendar = Calendar.getInstance();
        currentSecond = calendar.get(Calendar.SECOND);
    }

    public void start() {
        reset();
        ScheduledExecutorService worker = Executors.newScheduledThreadPool(3);
        worker.scheduleAtFixedRate(new Runnable() {
            public void run() {
                if (currentSecond == 60) {
                    reset();
                }
                time.setText(String.format("%s:%02d", sdf.format(calendar.getTime()), currentSecond));
                time2.setText(String.format("%s:%02d", sdf.format(calendar.getTime()), currentSecond));
                time3.setText(String.format("%s:%02d", sdf.format(calendar.getTime()), currentSecond));
                time4.setText(String.format("%s:%02d", sdf.format(calendar.getTime()), currentSecond));

                currentSecond++;
            }
        }, 0, 1000, TimeUnit.MILLISECONDS);
    }

    void DropDownSet() throws Exception {
        connect = new Connection();
        listitem = connect.DropState();
        for (int i = 0; i < listitem.size(); i++) {
            datahold = listitem.get(i);
            States.addItem(datahold.getState());
            update_state.addItem(datahold.getState());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Setting = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        Fname = new javax.swing.JTextField();
        Lname = new javax.swing.JTextField();
        Fatname = new javax.swing.JTextField();
        Pno = new javax.swing.JTextField();
        Mno = new javax.swing.JTextField();
        Pin = new javax.swing.JTextField();
        Email = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Address = new javax.swing.JTextArea();
        Citys = new javax.swing.JComboBox();
        States = new javax.swing.JComboBox();
        Regis_Submit = new javax.swing.JButton();
        Regis_Cancel = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Notes = new javax.swing.JTextArea();
        PhotoLabel = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        table_registration = new javax.swing.JTable();
        combobox_registration = new javax.swing.JComboBox();
        time = new javax.swing.JLabel();
        DOB = new org.jdesktop.swingx.JXDatePicker();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        To = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Message = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        Subject = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        Attach = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        time4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        Go = new javax.swing.JButton();
        label2 = new java.awt.Label();
        StartDate = new org.jdesktop.swingx.JXDatePicker();
        EndDate = new org.jdesktop.swingx.JXDatePicker();
        update_pin = new javax.swing.JTextField();
        update_name = new javax.swing.JTextField();
        update_fatname = new javax.swing.JTextField();
        Email_id = new javax.swing.JTextField();
        update_mobile = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        update_notes = new javax.swing.JTextArea();
        Delete = new javax.swing.JButton();
        update_city = new javax.swing.JComboBox();
        update_state = new javax.swing.JComboBox();
        Update_Button = new javax.swing.JButton();
        Print = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        update_Address = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        UpdatePhotoButton = new javax.swing.JButton();
        updatePhotoLabel = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        update_dob = new org.jdesktop.swingx.JXDatePicker();
        jPanel4 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        Host = new javax.swing.JComboBox();
        Port = new javax.swing.JComboBox();
        User = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        Pwd = new javax.swing.JPasswordField();
        time2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        Submit_change_pwd = new javax.swing.JButton();
        ClearPassword = new javax.swing.JButton();
        old_pwd = new javax.swing.JPasswordField();
        new_pwd = new javax.swing.JPasswordField();
        reenter_pwd = new javax.swing.JPasswordField();
        jLabel35 = new javax.swing.JLabel();
        naming = new javax.swing.JTextField();
        time3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Setting.setBackground(new java.awt.Color(0, 153, 153));
        Setting.setForeground(new java.awt.Color(0, 51, 51));
        Setting.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Setting.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SettingMouseClicked(evt);
            }
        });
        Setting.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SettingStateChanged(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setMinimumSize(new java.awt.Dimension(1350, 650));
        jPanel1.setPreferredSize(new java.awt.Dimension(1400, 750));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("First Name:");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Last Name:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Father's Name:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Phone No:");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Mobile No:");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Email_ID:");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Date of Birth:");

        jLabel9.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Address:");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("City:");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("State:");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Pin:");

        Fname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FnameActionPerformed(evt);
            }
        });
        Fname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                FnameFocusGained(evt);
            }
        });
        Fname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FnameKeyPressed(evt);
            }
        });

        Lname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LnameActionPerformed(evt);
            }
        });
        Lname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LnameKeyPressed(evt);
            }
        });

        Fatname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Fatname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FatnameKeyPressed(evt);
            }
        });

        Pno.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Pno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PnoKeyPressed(evt);
            }
        });

        Mno.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Mno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MnoKeyPressed(evt);
            }
        });

        Pin.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Pin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PinActionPerformed(evt);
            }
        });
        Pin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PinKeyPressed(evt);
            }
        });

        Email.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EmailKeyPressed(evt);
            }
        });

        Address.setColumns(20);
        Address.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Address.setRows(5);
        Address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AddressKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(Address);

        Citys.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Citys.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select One" }));
        Citys.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CitysActionPerformed(evt);
            }
        });
        Citys.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CitysKeyPressed(evt);
            }
        });

        States.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        States.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select One" }));
        States.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatesActionPerformed(evt);
            }
        });
        States.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                StatesKeyPressed(evt);
            }
        });

        Regis_Submit.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Regis_Submit.setText("Submit");
        Regis_Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Regis_SubmitActionPerformed(evt);
            }
        });

        Regis_Cancel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Regis_Cancel.setText("Cancel");
        Regis_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Regis_CancelActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton5.setText("Select Photo..");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Remarks:");

        Notes.setColumns(20);
        Notes.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Notes.setRows(5);
        jScrollPane3.setViewportView(Notes);

        table_registration.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        table_registration.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Father's", "Phone Number", "Mobile Number", "Email_ID", "DOB", "Address", "City", "State", "Pin", "Notes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_registration.setRowHeight(28);
        table_registration.getTableHeader().setReorderingAllowed(false);
        jScrollPane7.setViewportView(table_registration);

        combobox_registration.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        combobox_registration.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select One", "Today", "Yesterday" }));
        combobox_registration.setAlignmentX(1.0F);
        combobox_registration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobox_registrationActionPerformed(evt);
            }
        });

        time.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        time.setForeground(new java.awt.Color(255, 255, 204));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 1349, Short.MAX_VALUE)
                .addGap(400, 400, 400))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Lname)
                            .addComponent(Fatname)
                            .addComponent(Pno)
                            .addComponent(Mno)
                            .addComponent(Email)
                            .addComponent(Fname)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DOB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(States, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Citys, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Pin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(Regis_Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Regis_Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(179, 179, 179)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(PhotoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(combobox_registration, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(180, 180, 180))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(Fname))
                                    .addComponent(DOB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Lname, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Fatname, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(States, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(Citys, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Pno, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(Mno, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Pin, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(Regis_Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Regis_Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(PhotoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(combobox_registration, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Setting.addTab("Registration", jPanel1);

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("To:");

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Subject");

        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Message");

        To.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        Message.setColumns(20);
        Message.setRows(5);
        jScrollPane2.setViewportView(Message);

        jButton3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton3.setText("Send");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Attached");

        Attach.setEnabled(false);

        jButton6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton6.setText("Attach File...");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        time4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        time4.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15)
                    .addComponent(jLabel19))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Subject, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(To, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(Attach, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 684, Short.MAX_VALUE)
                .addComponent(time4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(To, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(Subject, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(time4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(Attach, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(124, Short.MAX_VALUE))
        );

        Setting.addTab("Send_Mail", jPanel2);

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));
        jPanel3.setMinimumSize(new java.awt.Dimension(1525, 660));
        jPanel3.setPreferredSize(new java.awt.Dimension(1710, 700));
        jPanel3.setVerifyInputWhenFocusTarget(false);

        jPanel6.setBackground(new java.awt.Color(0, 102, 102));
        jPanel6.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(150, 142, 142)));

        label1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label1.setForeground(new java.awt.Color(255, 255, 255));
        label1.setText("Start Date:");

        Go.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Go.setText("Go");
        Go.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoActionPerformed(evt);
            }
        });
        Go.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                GoAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        label2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        label2.setForeground(new java.awt.Color(255, 255, 255));
        label2.setText("End Date:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StartDate, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                    .addComponent(EndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(Go, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(361, 361, 361))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Go, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(EndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        update_pin.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        update_name.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        update_fatname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        update_fatname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_fatnameActionPerformed(evt);
            }
        });

        Email_id.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        update_mobile.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Name:");

        jLabel24.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Father's Name:");

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Mobile Number:");

        jLabel26.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Email_ID:");

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Date of Birth:");

        jLabel28.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("State:");

        jLabel29.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("City:");

        jLabel30.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Pin:");

        jLabel31.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Remarks:");

        update_notes.setColumns(20);
        update_notes.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        update_notes.setRows(5);
        jScrollPane4.setViewportView(update_notes);

        Delete.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        update_city.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        update_city.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select One" }));

        update_state.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        update_state.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select One" }));
        update_state.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_stateActionPerformed(evt);
            }
        });

        Update_Button.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Update_Button.setText("Update");
        Update_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_ButtonActionPerformed(evt);
            }
        });

        Print.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Print.setText("Print");
        Print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Address");

        update_Address.setColumns(20);
        update_Address.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        update_Address.setRows(5);
        jScrollPane6.setViewportView(update_Address);

        jPanel5.setBackground(java.awt.SystemColor.controlHighlight);

        jLabel2.setBackground(java.awt.SystemColor.controlHighlight);
        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Update Records...");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(146, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        table.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Father's Name", "Phone Number", "Mobile Number", "Email_ID", "DOB", "Address", "City", "State", "Pin", "Remarks", "Photo", "id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Byte.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setRowHeight(30);
        table.getTableHeader().setReorderingAllowed(false);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tableMouseEntered(evt);
            }
        });
        jScrollPane8.setViewportView(table);
        table.getColumnModel().getColumn(12).setPreferredWidth(10);

        UpdatePhotoButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        UpdatePhotoButton.setText("Select Photo...");
        UpdatePhotoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatePhotoButtonActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel36.setText("Search");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1353, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Update_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(57, 57, 57)
                                    .addComponent(Print, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(update_mobile, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(Email_id, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(update_fatname, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(update_name, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(update_pin, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(update_state, 0, 165, Short.MAX_VALUE)
                            .addComponent(update_city, 0, 165, Short.MAX_VALUE)
                            .addComponent(update_dob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UpdatePhotoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updatePhotoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(396, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(update_name, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(update_dob, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(update_state, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(update_city, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(update_fatname, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(update_mobile, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(update_pin)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Email_id, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(updatePhotoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Print, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Update_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UpdatePhotoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3))
        );

        Setting.addTab("Report", jPanel3);

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));

        jLabel20.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Host Name:");

        jLabel21.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Port Number:");

        jLabel22.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("User Name:");

        jLabel23.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Password:");

        Host.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Host.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select One", "smtp.gmail.com" }));
        Host.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HostActionPerformed(evt);
            }
        });

        Port.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Port.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select One" }));

        User.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jButton4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton4.setText("Save");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton7.setText("Cancel");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        Pwd.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        time2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        time2.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(361, 361, 361)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Port, javax.swing.GroupLayout.Alignment.LEADING, 0, 266, Short.MAX_VALUE)
                    .addComponent(User, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                    .addComponent(Pwd, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                    .addComponent(Host, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(1000, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(time2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(time2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Host, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Port, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(User, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Pwd, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addGap(56, 56, 56)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(281, Short.MAX_VALUE))
        );

        Setting.addTab("Setting", jPanel4);

        jPanel7.setBackground(new java.awt.Color(0, 153, 153));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Old Password");

        jLabel33.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("New Password");

        jLabel34.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Re-Enter Password");

        Submit_change_pwd.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Submit_change_pwd.setText("Submit");
        Submit_change_pwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Submit_change_pwdActionPerformed(evt);
            }
        });

        ClearPassword.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ClearPassword.setText("Clear");
        ClearPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearPasswordActionPerformed(evt);
            }
        });

        old_pwd.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        old_pwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                old_pwdActionPerformed(evt);
            }
        });
        old_pwd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                old_pwdKeyPressed(evt);
            }
        });

        new_pwd.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        new_pwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_pwdActionPerformed(evt);
            }
        });
        new_pwd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                new_pwdKeyPressed(evt);
            }
        });

        reenter_pwd.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        reenter_pwd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                reenter_pwdKeyPressed(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("User_ID");

        naming.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        time3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        time3.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Submit_change_pwd, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(ClearPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                        .addGap(361, 361, 361)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 270, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(old_pwd, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9))
                            .addComponent(new_pwd, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reenter_pwd, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(naming, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(740, 740, 740))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(time3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(time3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(naming, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(old_pwd, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(new_pwd, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reenter_pwd, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addGap(38, 38, 38)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClearPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Submit_change_pwd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(339, Short.MAX_VALUE))
        );

        Setting.addTab("Change Password", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Setting)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Setting, javax.swing.GroupLayout.PREFERRED_SIZE, 681, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FnameActionPerformed

    private void LnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LnameActionPerformed

    private void PinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PinActionPerformed

    private void Regis_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Regis_CancelActionPerformed
        // TODO add your handling code here:
        Fname.setText("");
        Lname.setText("");
        Address.setText("");
        Citys.setSelectedIndex(0);
        States.setSelectedIndex(0);
        DOB.setDate(null);
        Fatname.setText("");
        Pno.setText("");
        Mno.setText("");
        Email.setText("");
        Pin.setText("");
        Notes.setText("");
        PhotoLabel.setIcon(null);
    }//GEN-LAST:event_Regis_CancelActionPerformed

    private void Regis_SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Regis_SubmitActionPerformed
        // TODO add your handling code here:
        Fname1 = Fname.getText();
        Lname1 = Lname.getText();
        Fatname1 = Fatname.getText();
        Pno1 = Pno.getText();
        Mno1 = Mno.getText();
        Email1 = Email.getText();

        DOB1 = DOB.getDate();
        Address1 = Address.getText();
        City1 = (String) Citys.getSelectedItem();
        State1 = (String) States.getSelectedItem();
        Pin1 = Pin.getText();
        Notes1 = Notes.getText();
        Pattern pattern1 = Pattern.compile("\\d{10}");
        Matcher matcher1 = pattern1.matcher(Mno1);

        Pattern pattern2 = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@" + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
        Matcher matcher2 = pattern2.matcher(Email1);

        Pattern pattern3 = Pattern.compile("\\d{6}");
        Matcher matcher3 = pattern3.matcher(Pin1);

        Pattern pattern4 = Pattern.compile("\\d{10}");
        Matcher matcher4 = pattern4.matcher(Pno1);


        if (Fname1.length() == 0) {
            JOptionPane.showMessageDialog(this, "Please Enter First name", "Error", JOptionPane.ERROR_MESSAGE);
            Fname.requestFocus();

        } else if (Lname1.length() == 0) {
            JOptionPane.showMessageDialog(this, "Please Enter LastName !!!", "Error", JOptionPane.ERROR_MESSAGE);
            Lname.requestFocus();
        } else if (Fatname1.length() == 0) {
            JOptionPane.showMessageDialog(this, "Please Enter Father Name!!!", "Error", JOptionPane.ERROR_MESSAGE);
            Fatname.requestFocus();
        } else if (!matcher4.matches()) {

            JOptionPane.showMessageDialog(this, "Please Enter 10 Digit Phone Number!!!", "Error", JOptionPane.ERROR_MESSAGE);
            Pno.requestFocus();

        } else if (!matcher1.matches()) {
            JOptionPane.showMessageDialog(this, "Please Enter 10 Digit Mobile Number!!!", "Error", JOptionPane.ERROR_MESSAGE);
            Mno.requestFocus();
        } else if (!matcher2.matches()) {
            JOptionPane.showMessageDialog(this, "Please Enter Correct  Email ID!!!", "Error", JOptionPane.ERROR_MESSAGE);
            Email.requestFocus();
        } else if (DOB1 == null) {
            JOptionPane.showMessageDialog(this, "Please Select Date !!!", "Error", JOptionPane.ERROR_MESSAGE);
            DOB.requestFocus();
        } else if (Address1.length() == 0) {
            JOptionPane.showMessageDialog(this, "Please Enter Address !!!", "Error", JOptionPane.ERROR_MESSAGE);
            Address.requestFocus();
        } else if (State1.equals("Select One")) {
            JOptionPane.showMessageDialog(this, "Please Select State!!!", "Error", JOptionPane.ERROR_MESSAGE);
            States.requestFocus();
        } else if (City1.equals("Select One")) {
            JOptionPane.showMessageDialog(this, "Please Select City!!!", "Error", JOptionPane.ERROR_MESSAGE);
            Citys.requestFocus();
        } else if (!matcher3.matches()) {
            JOptionPane.showMessageDialog(this, "Please Enter Valid Pin Code!!!", "Error", JOptionPane.ERROR_MESSAGE);
            Pin.requestFocus();
        } else {
            SimpleDateFormat formater = new SimpleDateFormat("yyyy/MM/dd");
            DOB2 = formater.format(DOB1);
            try {

                connect = new Connection();
                boolean b = connect.Checking(Fname, Lname, Fatname1, Mno1, DOB2);
                if (b == false) {
                    boolean q = connect.insert(Fname1, Lname1, Fatname1, Pno1, Mno1, Email1, DOB2, Address1, City1, State1, Pin1, Notes1, person_image);
                    if (q == false) {
                        model1 = (DefaultTableModel) table_registration.getModel();
                        Object[] rows = {Fname.getText() + " " + Lname.getText(), Fatname.getText(), Pno.getText(), Mno.getText(), Email.getText(), DOB2, Address.getText(), Citys.getSelectedItem(), States.getSelectedItem(), Pin.getText(), Notes.getText()};
                        model1.addRow(rows);

                        Fname.setText("");
                        Lname.setText("");
                        Address.setText("");
                        Citys.setSelectedIndex(0);
                        States.setSelectedIndex(0);
                        DOB.setDate(null);
                        Fatname.setText("");
                        Pno.setText("");
                        Mno.setText("");
                        Email.setText("");
                        Pin.setText("");
                        Notes.setText("");
                        PhotoLabel.setIcon(null);
                        JOptionPane.showMessageDialog(null, "Record Insert");

                    } else {
                        JOptionPane.showMessageDialog(null, "Record Not Insert");
                    }


                } else {
                    JOptionPane.showMessageDialog(null, "Record Already Exists!!!");
                }

            } catch (Exception e) {
                System.err.println(e);
            }
        }


    }//GEN-LAST:event_Regis_SubmitActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        Host1 = (String) Host.getSelectedItem();
        Port1 = (String) Port.getSelectedItem();
        User1 = User.getText();
        Pwd1 = Pwd.getPassword();
        Pattern pattern1 = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@" + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
        Matcher matcher1 = pattern1.matcher(User1);
        if (Host1.equals("Select One")) {
            JOptionPane.showMessageDialog(this, "Please Select Host Name !!!", "Error", JOptionPane.ERROR_MESSAGE);

        } else if (!matcher1.matches()) {
            JOptionPane.showMessageDialog(this, "Please Enter Correct Email ID!!!", "Error", JOptionPane.ERROR_MESSAGE);

        } else if (Pwd1.equals("")) {
            JOptionPane.showMessageDialog(this, "Please Enter Password!!!", "Error", JOptionPane.ERROR_MESSAGE);

        } else {
            try {
                configUtil = new ConfigUtility();
                configUtil.saveProperties(Host1, Port1, User1, Pwd1);
                JOptionPane.showMessageDialog(null, "Properties were saved successfully!!!");

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error saving properties file: " + ex.getMessage(),
                        "Error", JOptionPane.ERROR_MESSAGE);
            }


        }

    }//GEN-LAST:event_jButton4ActionPerformed

    void loadSetting() throws IOException {
        Properties pros;
        configUtil = new ConfigUtility();
        pros = configUtil.loadProperlies();
        Host.setSelectedItem(pros.getProperty("mail.smtp.host"));
        Port.setSelectedItem(pros.getProperty("mail.smtp.port"));
        User.setText(pros.getProperty("mail.user"));
        Pwd.setText(pros.getProperty("mail.password"));
    }

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        filename = f.getAbsolutePath();
        try {
            File image = new File(filename);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            for (int readNum; (readNum = fis.read(buf)) != -1;) {
                bos.write(buf, 0, readNum);
            }
            person_image = bos.toByteArray();
            System.out.println(person_image);
            format = new ImageIcon(filename);
            PhotoLabel.setIcon(format);
        } catch (Exception e) {
        }


    }//GEN-LAST:event_jButton5ActionPerformed

    private void StatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatesActionPerformed
        // TODO add your handling code here:
        State2 = (String) States.getSelectedItem();
        if (!"Select One".equals(State2)) {
            try {
                connect = new Connection();

                listitem = connect.DropCity(State2);
                Citys.removeAllItems();
                for (int i = 0; i < listitem.size(); i++) {
                    datahold = listitem.get(i);
                    Citys.addItem(datahold.getCity());
                }
            } catch (Exception ex) {
                Logger.getLogger(MasterPageRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }


        } else {
            Citys.removeAllItems();
            Citys.addItem("Select One");
        }
    }//GEN-LAST:event_StatesActionPerformed

    private void SettingStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SettingStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_SettingStateChanged

    private void HostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HostActionPerformed
        // TODO add your handling code here:
        Host2 = (String) Host.getSelectedItem();
        if (!"Select One".equals(Host2)) {
            try {
                connect = new Connection();
                listitems = connect.DropHost(Host2);
                Port.removeAllItems();
                for (int i = 0; i < listitems.size(); i++) {
                    holdClass = listitems.get(i);
                    Port.addItem(holdClass.getPort());
                }
            } catch (Exception ex) {
                Logger.getLogger(MasterPageRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }


        } else {
            Port.removeAllItems();
            Port.addItem("Select One");

        }

    }//GEN-LAST:event_HostActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        Host.setSelectedIndex(0);
        Port.setSelectedIndex(0);
        User.setText("");
        Pwd.setText("");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (!validateFields()) {
            return;
        }
        To1 = To.getText();
        Subject1 = Subject.getText();
        Message1 = Message.getText();

        File[] attachFiles = null;
        if (!Attach.getText().equals("")) {
            File selectedFile = Chooser.getSelectedFile();
            attachFiles = new File[]{selectedFile};
        }


        try {
            Properties Props = configUtil.loadProperlies();
            //   System.out.println("vicky"+Props.getProperty("mail.smtp.host"));
            EmailUtility.sendEmail(Props, To1, Subject1, Message1, attachFiles);
            To.setText("");
            Subject.setText("");
            Attach.setText("");
            Message.setText("");
            JOptionPane.showMessageDialog(this, "The e-mail has been sent successfully!");

        } catch (HeadlessException | IOException | MessagingException ex) {
            JOptionPane.showMessageDialog(this,
                    "Error while sending the e-mail: " + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        Chooser = new JFileChooser();
        Chooser.setMultiSelectionEnabled(true);
        Chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int result = Chooser.showDialog(this, "Open/Save");
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = Chooser.getSelectedFile();
            Attach.setText(file.toString());

        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void CitysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CitysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CitysActionPerformed

    private void Update_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_ButtonActionPerformed
        String str = update_name.getText().trim();
        String up_fatname = update_fatname.getText();
        String up_mobile3 = update_mobile.getText();
        String email_ID = Email_id.getText();
        Date updatedob = update_dob.getDate();
        String up_Address = update_Address.getText();
        String up_city = (String) update_city.getSelectedItem();
        String up_state = (String) update_state.getSelectedItem();
        String up_pin = update_pin.getText();
        String up_notes = update_notes.getText();

        Pattern pattern1 = Pattern.compile("\\d{10}");
        Matcher matcher1 = pattern1.matcher(up_mobile3);

        Pattern pattern2 = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@" + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
        Matcher matcher2 = pattern2.matcher(email_ID);

        Pattern pattern3 = Pattern.compile("\\d{6}");
        Matcher matcher3 = pattern3.matcher(up_pin);
        if (str.length() == 0) {
            JOptionPane.showMessageDialog(this, "Please Enter Full Name", "Error", JOptionPane.ERROR_MESSAGE);
            update_name.requestFocus();

        } else if (up_fatname.length() == 0) {
            JOptionPane.showMessageDialog(this, "Please Enter Father Name!!!", "Error", JOptionPane.ERROR_MESSAGE);
            update_fatname.requestFocus();

        } else if (!matcher1.matches()) {
            JOptionPane.showMessageDialog(this, "Please Enter 10 Digit Mobile Number!!!", "Error", JOptionPane.ERROR_MESSAGE);
            update_mobile.requestFocus();
        } else if (!matcher2.matches()) {
            JOptionPane.showMessageDialog(this, "Please Enter Correct  Email ID!!!", "Error", JOptionPane.ERROR_MESSAGE);
            Email_id.requestFocus();
        } else if (up_Address.length() == 0) {
            JOptionPane.showMessageDialog(this, "Please Enter Address!!!", "Error", JOptionPane.ERROR_MESSAGE);
            update_Address.requestFocus();
        } else if (updatedob == null) {
            JOptionPane.showMessageDialog(this, "Please Select Date !!!", "Error", JOptionPane.ERROR_MESSAGE);
            update_dob.requestFocus();
        } else if (up_state.length() == 0) {
            JOptionPane.showMessageDialog(this, "Please Select State !!!", "Error", JOptionPane.ERROR_MESSAGE);
            update_state.requestFocus();
        } else if (up_city.length() == 0) {
            JOptionPane.showMessageDialog(this, "Please Select City !!!", "Error", JOptionPane.ERROR_MESSAGE);
            update_city.requestFocus();
        } else if (!matcher3.matches()) {
            JOptionPane.showMessageDialog(this, "Please Enter Valid Pin Code!!!", "Error", JOptionPane.ERROR_MESSAGE);
            update_pin.requestFocus();
        } else {
            Object valueAt = model.getValueAt(table.getSelectedRow(), 12);
            int id = (int) valueAt;
            // String fnaam=  str.substring(0,str.indexOf(' ')); ;
            //String lnaam=  str.substring(str.indexOf(' ')+1);
            String[] ch = str.split(" ", -1);
            String fnaam = ch[0];
            String lnaam = "";
            for (int i = 1; i < ch.length; i++) {
                lnaam += ch[i] + " ";
            }


            updatedob = update_dob.getDate();
            SimpleDateFormat formater = new SimpleDateFormat("yyyy/MM/dd");
            String updatedateBirth = formater.format(updatedob);
            try {
                connect2 = new Connection2();
                int val = connect2.UpdateRecord(id, fnaam, lnaam, update_fatname.getText(), update_mobile.getText(), Email_id.getText(), updatedateBirth, update_city.getSelectedItem(), update_state.getSelectedItem(), update_pin.getText(),
                        update_notes.getText(), update_Address.getText(), person_image1);

                if (val == 1) {
                    JOptionPane.showMessageDialog(this, "Record Successfully Updated !!!");
                } else {
                    JOptionPane.showMessageDialog(this, "Error while Updating Record : ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception ex) {
                Logger.getLogger(MasterPageRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }



        }



    }//GEN-LAST:event_Update_ButtonActionPerformed

    private void update_stateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_stateActionPerformed
        // TODO add your handling code here:
        update_state2 = (String) update_state.getSelectedItem();
        if (!"Select One".equals(update_state2)) {
            try {
                connect = new Connection();

                listitem = connect.DropCity(update_state2);
                update_city.removeAllItems();
                for (int i = 0; i < listitem.size(); i++) {
                    datahold = listitem.get(i);
                    update_city.addItem(datahold.getCity());
                }
            } catch (Exception ex) {
                Logger.getLogger(MasterPageRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            update_city.removeAllItems();
            update_city.addItem("Select One");
        }

    }//GEN-LAST:event_update_stateActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        Object valueAt = model.getValueAt(table.getSelectedRow(), 12);
        int id = (int) valueAt;

        try {
            connect2 = new Connection2();
            int val = connect2.DeleteRecord(id);

            if (val == 1) {
                model.removeRow(table.getSelectedRow());
                Delete.setVisible(false);
                Update_Button.setVisible(false);

            } else {
                JOptionPane.showMessageDialog(this, "Error while Deleting Record : ", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            Logger.getLogger(MasterPageRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void GoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoActionPerformed
        // TODO add your handling code here:
        Delete.setVisible(false);
        Update_Button.setVisible(false);
        update_name.setText("");
        update_fatname.setText("");
        update_mobile.setText("");
        update_Address.setText("");
        Email_id.setText("");
        update_dob.setDate(null);
        update_city.setSelectedIndex(0);
        update_state.setSelectedIndex(0);
        update_pin.setText("");
        update_notes.setText("");
        updatePhotoLabel.setIcon(null);
        StartDate1 = StartDate.getDate();
        EndDate1 = EndDate.getDate();
        SimpleDateFormat formater = new SimpleDateFormat("yyyy/MM/dd");

        if (StartDate1 == null) {
            JOptionPane.showMessageDialog(this, "Please Select Start Date !!!",
                    "Error", JOptionPane.ERROR_MESSAGE);
        } else {

            try {
                connect1 = new Connection2();
                holdingData = connect1.Report(StartDate1, EndDate1);
                if (holdingData.size() > 0) {
                    model = (DefaultTableModel) table.getModel();
                    while (model.getRowCount() > 0) {
                        model.removeRow(0);
                    }
                    hrd = new HoldingRegistrationData();
                    int holdValueNo = holdingData.size();
                    for (int i = 0; i < holdValueNo; i++) {

                        hrd = holdingData.get(i);
                        Object[] rows = {hrd.getFname() + " " + hrd.getLname(), hrd.getFather_Name(), hrd.getPhone_Num(), hrd.getMobile_Num(), hrd.getEmail_ID(), hrd.getDOB(), hrd.getAddress(), hrd.getState(), hrd.getCity(), hrd.getPin(), hrd.getNotes(), hrd.getImage(), hrd.getR_id()};

                        model.addRow(rows);

                    }
                    table.setModel(model);

                } else {

                    JOptionPane.showMessageDialog(this, "No Data !!!");

                }

            } catch (SQLException ex) {
                Logger.getLogger(MasterPageRegistration.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(MasterPageRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_GoActionPerformed

    private void PrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintActionPerformed


        if (table.getRowCount() != 0) {


            try {
                JFileChooser fileChooser = new JFileChooser();
                int retval = fileChooser.showSaveDialog(Print);

                if (retval == JFileChooser.APPROVE_OPTION) {
                    File file = fileChooser.getSelectedFile();
                    if (file != null) {
                        if (!file.getName().toLowerCase().endsWith(".xls")) {
                            file = new File(file.getParentFile(), file.getName() + ".xls");



                        }

                        try {
                            ExcelExporter exp = new ExcelExporter();
                            exp.exportTable(table, file);


                            Desktop.getDesktop().open(file);
                        } catch (UnsupportedEncodingException e) {
                            e.printStackTrace();

                        } catch (FileNotFoundException e) {
                            e.printStackTrace();
                            System.out.println("not found");
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    }
                }


            } catch (Exception e) {
                System.out.println("shit");
            }


        }

    }//GEN-LAST:event_PrintActionPerformed

    private void SettingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SettingMouseClicked
        // TODO add your         
    }//GEN-LAST:event_SettingMouseClicked

    private void combobox_registrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobox_registrationActionPerformed
        try {
            // TODO add your handling code here:
            combobox_registration1 = (String) combobox_registration.getSelectedItem();

            java.sql.Date sqlDate = new java.sql.Date(new java.util.Date().getTime());



            if ("Today".equals(combobox_registration1)) {

                connect1 = new Connection2();
                registration_table_item = connect1.Registration_table_Record(sqlDate);

                if (registration_table_item.size() > 0) {
                    model1 = (DefaultTableModel) table_registration.getModel();
                    while (model1.getRowCount() > 0) {
                        model1.removeRow(0);
                    }
                    hrd1 = new HoldingRegistrationData();

                    for (int i = 0; i < registration_table_item.size(); i++) {

                        hrd1 = registration_table_item.get(i);
                        Object[] rows = {hrd1.getFname() + " " + hrd1.getLname(), hrd1.getFather_Name(), hrd1.getPhone_Num(), hrd1.getMobile_Num(), hrd1.getEmail_ID(),
                            hrd1.getDOB(), hrd1.getAddress(), hrd1.getState(), hrd1.getCity(), hrd1.getPin(), hrd1.getNotes()};

                        model1.addRow(rows);

                    }
                    table_registration.setModel(model1);

                } else {
                    JOptionPane.showMessageDialog(this,
                            "No Record");

                }
            }

            if ("Yesterday".equals(combobox_registration1)) {
                Calendar cal = Calendar.getInstance();
                cal.setTime(sqlDate);
                cal.add(Calendar.DAY_OF_YEAR, -1);
                java.sql.Date yesterdayDate = new java.sql.Date(cal.getTime().getTime());

                connect1 = new Connection2();
                registration_table_item = connect1.Registration_table_Record(yesterdayDate);

                if (registration_table_item.size() > 0) {
                    model1 = (DefaultTableModel) table_registration.getModel();
                    while (model1.getRowCount() > 0) {
                        model1.removeRow(0);
                    }
                    hrd1 = new HoldingRegistrationData();

                    for (int i = 0; i < registration_table_item.size(); i++) {

                        hrd1 = registration_table_item.get(i);
                        Object[] rows = {hrd1.getFname() + " " + hrd1.getLname(), hrd1.getFather_Name(), hrd1.getPhone_Num(), hrd1.getMobile_Num(), hrd1.getEmail_ID(),
                            hrd1.getDOB(), hrd1.getAddress(), hrd1.getState(), hrd1.getCity(), hrd1.getPin(), hrd1.getNotes()};


                        model1.addRow(rows);

                    }
                    table_registration.setModel(model1);
                } else {
                    JOptionPane.showMessageDialog(this,
                            "No Record");

                }
            }







        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "Error" + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);

        }




    }//GEN-LAST:event_combobox_registrationActionPerformed

    private void update_fatnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_fatnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_update_fatnameActionPerformed

    private void tableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tableMouseEntered

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:

        Update_Button.setVisible(true);
        Delete.setVisible(true);
        model = (DefaultTableModel) table.getModel();

        update_name.setText(model.getValueAt(table.getSelectedRow(), 0).toString());
        update_fatname.setText(model.getValueAt(table.getSelectedRow(), 1).toString());
        update_mobile.setText(model.getValueAt(table.getSelectedRow(), 3).toString());
        Email_id.setText(model.getValueAt(table.getSelectedRow(), 4).toString());
        update_dob.setDate((Date) model.getValueAt(table.getSelectedRow(), 5));
        update_Address.setText(model.getValueAt(table.getSelectedRow(), 6).toString());
        update_city.setSelectedItem(model.getValueAt(table.getSelectedRow(), 7).toString());
        update_state.setSelectedItem(model.getValueAt(table.getSelectedRow(), 8).toString());
        update_pin.setText(model.getValueAt(table.getSelectedRow(), 9).toString());
        update_notes.setText(model.getValueAt(table.getSelectedRow(), 10).toString());
        Object imagedata = model.getValueAt(table.getSelectedRow(), 11);
        person_image1 = (byte[]) imagedata;

        if (person_image1 != null) {
            format1 = new ImageIcon(person_image1);
            updatePhotoLabel.setIcon(format1);
        } else {
            updatePhotoLabel.setIcon(null);
        }
    }//GEN-LAST:event_tableMouseClicked

    private void FnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FnameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_FnameFocusGained

    private void new_pwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_pwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_new_pwdActionPerformed

    private void old_pwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_old_pwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_old_pwdActionPerformed

    private void ClearPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearPasswordActionPerformed
        // TODO add your handling code here:
        naming.setText("");
        old_pwd.setText("");
        new_pwd.setText("");
        reenter_pwd.setText("");
    }//GEN-LAST:event_ClearPasswordActionPerformed

    private void old_pwdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_old_pwdKeyPressed
        // TODO add your handling code here:

        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            new_pwd.requestFocus();
        }


    }//GEN-LAST:event_old_pwdKeyPressed

    private void new_pwdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_new_pwdKeyPressed
        // TODO add your handling code here:
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            reenter_pwd.requestFocus();
        }

    }//GEN-LAST:event_new_pwdKeyPressed

    private void reenter_pwdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reenter_pwdKeyPressed
        // TODO add your handling code here:
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            Submit_change_pwd.requestFocus();
        }

    }//GEN-LAST:event_reenter_pwdKeyPressed

    private void FnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FnameKeyPressed
        // TODO add your handling code here:
        // int key = evt.getKeyCode();
        // if (key == KeyEvent.VK_DOWN)
        //  Lname.requestFocus();
    }//GEN-LAST:event_FnameKeyPressed

    private void LnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LnameKeyPressed
        // TODO add your handling code here:
        // int key = evt.getKeyCode();
        // if (key == KeyEvent.VK_DOWN)
        //  Fatname.requestFocus();
    }//GEN-LAST:event_LnameKeyPressed

    private void PnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PnoKeyPressed
        // TODO add your handling code here:
        // int key = evt.getKeyCode();
        // if (key == KeyEvent.VK_DOWN)
        //Mno.requestFocus();
    }//GEN-LAST:event_PnoKeyPressed

    private void FatnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FatnameKeyPressed
        // TODO add your handling code here:
        //  int key = evt.getKeyCode();
        //  if (key == KeyEvent.VK_DOWN)
        //no.requestFocus();
    }//GEN-LAST:event_FatnameKeyPressed

    private void MnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MnoKeyPressed
        // TODO add your handling code here:
        //int key = evt.getKeyCode();
        //if (key == KeyEvent.VK_DOWN)
        // Email.requestFocus();
    }//GEN-LAST:event_MnoKeyPressed

    private void EmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EmailKeyPressed
        // TODO add your handling code here:
        //int key = evt.getKeyCode();
        //if (key == KeyEvent.VK_DOWN)
        //Address.requestFocus();
    }//GEN-LAST:event_EmailKeyPressed

    private void AddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AddressKeyPressed
        // TODO add your handling code here:
        //int key = evt.getKeyCode();
        //if (key == KeyEvent.VK_DOWN)
        // DOB.requestFocus();
    }//GEN-LAST:event_AddressKeyPressed

    private void DOBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DOBKeyPressed
        // TODO add your handling code here:
        // int key = evt.getKeyCode();
        // if (key == KeyEvent.VK_DOWN)
        //  States.requestFocus();
    }//GEN-LAST:event_DOBKeyPressed

    private void StatesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StatesKeyPressed
        // TODO add your handling code here:
        //int key = evt.getKeyCode();
        // if (key == KeyEvent.VK_DOWN)
        //  Citys.requestFocus();
    }//GEN-LAST:event_StatesKeyPressed

    private void CitysKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CitysKeyPressed
        // TODO add your handling code here:
        // int key = evt.getKeyCode();
        // if (key == KeyEvent.VK_DOWN)
        //  Pin.requestFocus();
    }//GEN-LAST:event_CitysKeyPressed

    private void PinKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PinKeyPressed
        // TODO add your handling code here:
        //       int key = evt.getKeyCode();
        //       if (key == KeyEvent.VK_DOWN)
        //        Notes.requestFocus();
    }//GEN-LAST:event_PinKeyPressed

    private void Submit_change_pwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Submit_change_pwdActionPerformed
        // TODO add your handling code here:
        char[] old_pwd2 = old_pwd.getPassword();
        String naming1 = naming.getText();
        char[] new_pwd2 = new_pwd.getPassword();
        char[] reenter_pwd2 = reenter_pwd.getPassword();

        StringBuffer result1 = new StringBuffer();
        for (int i = 0; i < new_pwd2.length; i++) {
            result1.append(new_pwd2[i]);
        }
        String new_pwd1 = result1.toString();

        StringBuffer result2 = new StringBuffer();
        for (int i = 0; i < reenter_pwd2.length; i++) {
            result2.append(reenter_pwd2[i]);
        }
        String reenter_pwd1 = result2.toString();

        StringBuffer result3 = new StringBuffer();
        for (int i = 0; i < old_pwd2.length; i++) {
            result3.append(old_pwd2[i]);
        }
        String old_pwd1 = result3.toString();
        if (naming1.length() == 0) {
            JOptionPane.showMessageDialog(this, "Please Enter User_ID!!!", "Error", JOptionPane.ERROR_MESSAGE);
            naming.requestFocus();
        }

        if (old_pwd1.length() == 0) {
            JOptionPane.showMessageDialog(this, "Please Enter Old Password!!!", "Error", JOptionPane.ERROR_MESSAGE);
            old_pwd.requestFocus();
        } else if (new_pwd1.length() < 8) {
            JOptionPane.showMessageDialog(this, "Please Enter 8 Digit Password!!!", "Error", JOptionPane.ERROR_MESSAGE);
            new_pwd.requestFocus();
        } else if (new_pwd1.length() < 8) {
            JOptionPane.showMessageDialog(this, "Please Enter New Password!!!", "Error", JOptionPane.ERROR_MESSAGE);
            new_pwd.requestFocus();
        } else if (reenter_pwd1.length() == 0) {
            JOptionPane.showMessageDialog(this, "Please Re-Enter Password!!!", "Error", JOptionPane.ERROR_MESSAGE);
            reenter_pwd.requestFocus();
        } else if (reenter_pwd1.length() < 8) {
            JOptionPane.showMessageDialog(this, "Please Enter 8 Digit Password!!!", "Error", JOptionPane.ERROR_MESSAGE);
            reenter_pwd.requestFocus();
        } else if (!new_pwd1.equals(reenter_pwd1)) {
            JOptionPane.showMessageDialog(this, "Password Not Matched!!!", "Error", JOptionPane.ERROR_MESSAGE);
            new_pwd.setText("");
            reenter_pwd.setText("");
            new_pwd.requestFocus();
        } else {

            try {
                connect2 = new Connection2();
                int val = connect2.UpdatePassword(naming1, new_pwd1, old_pwd1);

                if (val == 1) {
                    naming.setText("");
                    old_pwd.setText("");
                    new_pwd.setText("");
                    reenter_pwd.setText("");
                    JOptionPane.showMessageDialog(this, "Password Successfully Updated !!!");

                } else {
                    JOptionPane.showMessageDialog(this, "Password is Wrong: ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception ex) {
                Logger.getLogger(MasterPageRegistration.class.getName()).log(Level.SEVERE, null, ex);

            }








        }

    }//GEN-LAST:event_Submit_change_pwdActionPerformed

    private void UpdatePhotoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatePhotoButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        filename = f.getAbsolutePath();
        try {
            File image = new File(filename);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            for (int readNum; (readNum = fis.read(buf)) != -1;) {
                bos.write(buf, 0, readNum);
            }
            person_image1 = bos.toByteArray();
            System.out.println(person_image1);
            format = new ImageIcon(filename);
            updatePhotoLabel.setIcon(format);
        } catch (Exception e) {
        }


    }//GEN-LAST:event_UpdatePhotoButtonActionPerformed

    private void GoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_GoAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_GoAncestorAdded

    /*private void deleteRow(int k){
                        
     }
     }*/
    private boolean validateFields() {
        To3 = To.getText();
        Pattern pattern6 = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@" + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
        Matcher matcher6 = pattern6.matcher(To3);


        if (!matcher6.matches()) {
            JOptionPane.showMessageDialog(this,
                    "Please enter To address!",
                    "Error", JOptionPane.ERROR_MESSAGE);
            To.requestFocus();
            return false;
        }

        if (Subject.getText().equals("")) {
            JOptionPane.showMessageDialog(this,
                    "Please enter subject!",
                    "Error", JOptionPane.ERROR_MESSAGE);
            Subject.requestFocus();
            return false;
        }

        if (Message.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter message!", "Error", JOptionPane.ERROR_MESSAGE);
            Message.requestFocus();
            return false;
        }

        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MasterPageRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MasterPageRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MasterPageRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MasterPageRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {

                    new MasterPageRegistration().setVisible(true);

                } catch (Exception ex) {
                    Logger.getLogger(MasterPageRegistration.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Address;
    private javax.swing.JTextField Attach;
    private javax.swing.JComboBox Citys;
    private javax.swing.JButton ClearPassword;
    private org.jdesktop.swingx.JXDatePicker DOB;
    private javax.swing.JButton Delete;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField Email_id;
    private org.jdesktop.swingx.JXDatePicker EndDate;
    private javax.swing.JTextField Fatname;
    private javax.swing.JTextField Fname;
    private javax.swing.JButton Go;
    private javax.swing.JComboBox Host;
    private javax.swing.JTextField Lname;
    private javax.swing.JTextArea Message;
    private javax.swing.JTextField Mno;
    private javax.swing.JTextArea Notes;
    private javax.swing.JLabel PhotoLabel;
    private javax.swing.JTextField Pin;
    private javax.swing.JTextField Pno;
    private javax.swing.JComboBox Port;
    private javax.swing.JButton Print;
    private javax.swing.JPasswordField Pwd;
    private javax.swing.JButton Regis_Cancel;
    private javax.swing.JButton Regis_Submit;
    private javax.swing.JTabbedPane Setting;
    private org.jdesktop.swingx.JXDatePicker StartDate;
    private javax.swing.JComboBox States;
    private javax.swing.JTextField Subject;
    private javax.swing.JButton Submit_change_pwd;
    private javax.swing.JTextField To;
    private javax.swing.JButton UpdatePhotoButton;
    private javax.swing.JButton Update_Button;
    private javax.swing.JTextField User;
    private javax.swing.JComboBox combobox_registration;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private javax.swing.JTextField naming;
    private javax.swing.JPasswordField new_pwd;
    private javax.swing.JPasswordField old_pwd;
    private javax.swing.JPasswordField reenter_pwd;
    private javax.swing.JTable table;
    private javax.swing.JTable table_registration;
    private javax.swing.JLabel time;
    private javax.swing.JLabel time2;
    private javax.swing.JLabel time3;
    private javax.swing.JLabel time4;
    private javax.swing.JLabel updatePhotoLabel;
    private javax.swing.JTextArea update_Address;
    private javax.swing.JComboBox update_city;
    private org.jdesktop.swingx.JXDatePicker update_dob;
    private javax.swing.JTextField update_fatname;
    private javax.swing.JTextField update_mobile;
    private javax.swing.JTextField update_name;
    private javax.swing.JTextArea update_notes;
    private javax.swing.JTextField update_pin;
    private javax.swing.JComboBox update_state;
    // End of variables declaration//GEN-END:variables
}
